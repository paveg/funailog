---
import type { Page } from 'astro';
import type { CollectionEntry } from 'astro:content';

import { CalendarIcon, ReloadIcon } from '@radix-ui/react-icons';
import { LanguagesIcon } from 'lucide-react';

import Pagination from './AstroPagination.astro';

import { defaultLang } from '@/i18n/ui';
import { getLangFromUrl, useTranslatedPath } from '@/i18n/utils';

export type Props = {
  page: Page<CollectionEntry<'blog'>>;
};
const { page } = Astro.props;
const url = Astro.url;
const lang = getLangFromUrl(url);
---

<>
  <div class="w-1/4 rounded-md border hover:-top-3 hover:shadow-md">
    <a
      class="m-1 flex items-center justify-around gap-1"
      href={lang === defaultLang ? '/blog/en' : '/blog'}
      aria-label={lang === defaultLang
        ? '英語記事を読む'
        : 'Switch to Japanese blog'}
    >
      <LanguagesIcon className="size-4" />
      <span>
        {lang === defaultLang ? 'Switch to English' : '日本語に切り替え'}
      </span>
    </a>
  </div>
  <ul class="space-y-6 py-8">
    {
      page.data.map((post) => {
        const { slug, data, collection } = post;
        const [, ...rest] = slug.split('/');
        const translatePath = useTranslatedPath(lang);
        const path = translatePath(rest.join('/'));
        return (
          <li>
            <article>
              <span>
                <time
                  class="flex items-center justify-start gap-2"
                  datetime={data.published.toISOString()}
                >
                  {data.lastUpdated ? (
                    <ReloadIcon className="size-4" />
                  ) : (
                    <CalendarIcon className="size-4" />
                  )}
                  {new Intl.DateTimeFormat('en-US', {
                    year: 'numeric',
                    month: 'short',
                    day: 'numeric',
                  }).format(data.lastUpdated ?? data.published)}
                </time>
              </span>
              <a href={`/${collection}/${path}`}>
                <h2>{data.title}</h2>
              </a>
              <span
                id="description"
                class="text-xs text-muted-foreground md:text-sm"
              >
                {data.description}
              </span>
            </article>
          </li>
        );
      })
    }
    <Pagination page={page} />
  </ul>
</>
