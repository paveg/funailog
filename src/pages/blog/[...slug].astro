---
import '@/styles/articles.css';
import type { CollectionEntry } from 'astro:content';
import { getCollection } from 'astro:content';
import { getEntry } from 'astro:content';

import Figure from '@/components/Figure.astro';
import Link from '@/components/Link.astro';
import { BlogDate } from '@/components/markdown/blog-date';
import { BlogMeta } from '@/components/markdown/blog-meta';
import Image from '@/components/markdown/Image.astro';
import { Separator } from '@/components/ui/separator';
import { defaultLang, ui } from '@/i18n/ui';
import { useTranslatedPath, useTranslations } from '@/i18n/utils';
import { getLangFromUrl } from '@/i18n/utils';
import Layout from '@/layouts/Layout.astro';
import { ArticleLd } from '@/lib/rich-results';

const meta = await getEntry('site', 'meta');
export type Props = {
  post: CollectionEntry<'blog'>;
};

export async function getStaticPaths() {
  const posts = (await getCollection('blog')).filter(
    (post) => post.data.isPublished,
  );

  const paths = posts.map((post) => {
    const [lang, ...slug] = post.slug.split('/');
    const translatePath = useTranslatedPath(lang as keyof typeof ui);
    return {
      params: {
        slug: translatePath(slug.join('/')),
      },
      props: { post },
    };
  });
  return paths;
}
const { Content, remarkPluginFrontmatter } = await Astro.props.post.render();
const { post } = Astro.props;
const components = {
  figure: Figure,
  a: Link,
  img: Image,
};
const site = Astro.site ?? '';
const globalLang = getLangFromUrl(Astro.url);
const [, ...slug] = post.slug.split('/');
const translatePath = useTranslatedPath(globalLang);
const path = `${post.collection}/${translatePath(slug.join('/'))}`;
const t = useTranslations(globalLang);
const defaultImagePath = '/first-place.jpg';
---

<Layout
  title={`${post.data.title} | ${t('main.title')}`}
  description={post.data.description}
  path={path}
  og={{
    enabled: true,
    width: 1200,
    height: 630,
    image: new URL(
      post.data.heroImage ??
        `/api/og/article/${post.collection}/${post.slug}.png`,
      site,
    ),
    type: 'article',
  }}
  hreflangs={[
    { path: `${path}`, hreflang: defaultLang },
    { path: `${path}`, hreflang: 'x-default' },
  ]}
  jsonLdSchema={ArticleLd(meta, post, site, globalLang)}
>
  <main>
    <article>
      <h1 class="text-center">{post.data.title}</h1>
      <BlogDate post={post} lang={globalLang} />
      <Image
        class="my-2 rounded-sm"
        src={post.data.heroImage ?? defaultImagePath}
        alt="A hero image of the article"
        width={1200}
        height={630}
      />
      <BlogMeta
        post={post}
        lang={globalLang}
        minRead={remarkPluginFrontmatter.minRead}
      />
      <Separator />
      <Content components={components} />
    </article>
  </main>
</Layout>
