---
import type { Page, PaginateFunction } from 'astro';
import type { CollectionEntry } from 'astro:content';
import { getCollection } from 'astro:content';

import Posts from '@/components/Posts.astro';
import { defaultLang } from '@/i18n/ui';
import { getLangFromUrl, useTranslations } from '@/i18n/utils';
import Layout from '@/layouts/Layout.astro';

export type Props = {
  page: Page<CollectionEntry<'blog'>>;
};

export async function getStaticPaths({
  paginate,
}: {
  paginate: PaginateFunction;
}) {
  const posts = (await getCollection('blog'))
    .filter((post) => {
      const [lang] = post.slug.split('/');
      return lang === defaultLang;
    })
    .sort(
      (a, b) =>
        (a.data.lastUpdated ?? a.data.published).getTime() -
        (b.data.lastUpdated ?? b.data.published).getTime(),
    )
    .reverse();

  return paginate(posts, { pageSize: 5 });
}

const { page } = Astro.props;
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<Layout
  title={t('main.title')}
  description={t('blog.description')}
  path="/blog"
  lang={lang}
  og={{
    enabled: true,
  }}
  hreflangs={[
    { path: `/blog`, hreflang: defaultLang },
    { path: '/blog/en', hreflang: 'en' },
    { path: '/blog/en', hreflang: 'x-default' },
  ]}
  ><main><Posts title={t('blog.index')} page={page} /></main>
</Layout>
